#!/bin/bash

# Remove comments to shrink the size of a Tandy Model 100 BASIC program.

# Lines which start with a comment remain if they are used as jump
# destinations by GOTO, GOSUB, or THEN. (See jumpdestinations program).

input=${1:-M100LE+comments.DO} # Default file to check if not specified
output=${2:-/dev/stdout} # Write to stdout if not second file.

echo "Reading from $input, writing to $output" >&2


# An array of line numbers to keep
declare -a jumps=($(`dirname $0`/jumpdestinations -l "$input"))
declare -i i=0

# Remove all comments and lines with no content
cat "$input" | sort -n |
    while read line; do
	# Extract line number, discarding leading whitespace and zeroes.
	lineno=$(echo "$line" | sed -rn 's/^\s*0*([0-9]+).*$/\1/p')

	# Progress meter for long files
	echo -n $lineno$'\r' >&2

	# Make sure we have the next jump destination queued up.
	while [[  ${jumps[i]}  &&  $lineno -gt ${jumps[i]}  ]]; do
	    i=i+1
	done

	# Is the line number equal (numerically) to the current jump point?
	if [[ $lineno -eq ${jumps[i]} ]]; then
	    # Keep this line as it is a jump destination.
	    echo "$line" | sed -r "s/\s*(REM|')[^\r]*/ '/i" 
	else
	    # Trim this line of comments. (Potentially removing it later).
	    echo "$line" | sed -r "s/\s*(REM|')[^\r]*//i" 
	fi
    done |

    # Remove ^Z, blank lines, and line numbers with no content
    tr -d $'\cZ' | grep -v '^\s*[0-9]*\s*$' |

    sort -n > "$output"
